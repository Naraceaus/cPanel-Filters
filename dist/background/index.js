/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/background/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/background/index.js":
/*!*********************************!*\
  !*** ./src/background/index.js ***!
  \*********************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/storage */ \"./src/utils/storage.js\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n\nvar getTabLocation = _utils_storage__WEBPACK_IMPORTED_MODULE_0__[\"getTabLocation\"],\n    sendMessage = _utils_storage__WEBPACK_IMPORTED_MODULE_0__[\"sendMessage\"],\n    changeLocation = _utils_storage__WEBPACK_IMPORTED_MODULE_0__[\"changeLocation\"],\n    queryTabs = _utils_storage__WEBPACK_IMPORTED_MODULE_0__[\"queryTabs\"],\n    sendMessageToID = _utils_storage__WEBPACK_IMPORTED_MODULE_0__[\"sendMessageToID\"],\n    retrieveData = _utils_storage__WEBPACK_IMPORTED_MODULE_0__[\"retrieveData\"];\n\nfunction handleMessages(message, sender, send_response) {\n  //loc specified then a content script hit a site\n  switch (message.type) {\n    case \"analyse\":\n      if (message.force_refresh != null && message.force_refresh) {\n        // refresh site without checking what we learned already\n        analyseSite(message.loc.domain, message.loc.path);\n      } else {\n        // pull from loc storage the site info, if there is none initiate checks\n        //otherwise check the last updated timestamp and only initiate check if it's older than X\n        retrieveData(message.loc.domain, function (domain_data) {\n          analyseSite(message.loc.domain, message.loc.path, domain_data[message.loc.domain]);\n        });\n      }\n\n      break;\n\n    case \"purge_cache\":\n      purgeCache(message, send_response);\n      return true;\n      break;\n  }\n}\n\nfunction analyseSite(domain, path, siteData) {\n  // replace preceding slash in string with nothing\n  var truncated_path = path.replace(/^\\//, \"\");\n\n  if (siteData == null) {\n    siteData = {\n      status: \"CHECKING FOR NETO\",\n      loggedin: false,\n      domain: domain,\n      themes: ['LOADING'],\n      livetheme: 'LOADING',\n      last_checked: new Date().getTime()\n    };\n    storeData(domain, siteData);\n  } // add timestamp check so only check login every X minutes\n\n\n  if (siteData.status != \"NOT A NETO SITE\") {\n    checkIsNeto();\n  }\n  /**\r\n   * Checks if the current page is a Neto site and stores the result.\r\n   */\n\n\n  function checkIsNeto() {\n    var url = \"\".concat(domain, \"/_cpanel\");\n    console.log('checking for neto');\n    getPage(url, {\n      'ajax': 'y'\n    }).then(function (text) {\n      isNetoResult(text);\n    });\n  }\n  /**\r\n   * Determines if the current page is a Neto site and stores the result\r\n   * @param {string} text - A string containing the result of getting a cpanel page \r\n   */\n\n\n  function isNetoResult(_x) {\n    return _isNetoResult.apply(this, arguments);\n  }\n  /**\r\n   * Determines if you're logged into the current Neto site and stores the result\r\n   * @param {string} text - \r\n   */\n\n\n  function _isNetoResult() {\n    _isNetoResult = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(text) {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(text == undefined);\n\n              if (text != undefined && !(text === \"\") && text.startsWith(\"NSD1;\")) {\n                siteData.status = \"CHECKING LOGIN\";\n                isLoggedInResult(text);\n              } else {\n                siteData.status = \"NOT A NETO SITE\";\n              }\n\n              storeData(domain, siteData);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    return _isNetoResult.apply(this, arguments);\n  }\n\n  function isLoggedInResult(_x2) {\n    return _isLoggedInResult.apply(this, arguments);\n  }\n  /**\r\n   * Finds the corresponding page in the control page for this webstore page and stores the result\r\n   */\n\n\n  function _isLoggedInResult() {\n    _isLoggedInResult = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(text) {\n      var response;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              response = parse_netosd_data(text);\n\n              if (response.error != null && response.error == \"NOT_LOGGED_IN\") {\n                siteData.status = \"NOT LOGGED IN\";\n                siteData.loggedin = true;\n              } else if (response.new_csrf_token != null) {\n                siteData.status = \"LOGGED IN\";\n                siteData.loggedin = true;\n                findPageInCPanel();\n                checkTheme();\n              } else {\n                siteData.status = \"WOOPS SOMETHING BROKE\";\n              }\n\n              storeData(domain, siteData);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n    return _isLoggedInResult.apply(this, arguments);\n  }\n\n  function findPageInCPanel() {\n    return _findPageInCPanel.apply(this, arguments);\n  }\n  /**\r\n   * Checks the installed themes and finds the active theme and stores both results\r\n   */\n\n\n  function _findPageInCPanel() {\n    _findPageInCPanel = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3() {\n      var url, queries, selector, storedDomain;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              url = \"\".concat(domain, \"/_cpanel/url\");\n              queries = {\n                \"_ftr_request_url\": \"^\".concat(truncated_path)\n              };\n              selector = \"#ajax-content-pl table tbody tr:first-of-type td:nth-of-type(2) a\";\n              storedDomain = \"\".concat(domain, \"|\").concat(truncated_path);\n              getPage(url, queries).then(function (text) {\n                var parser = new DOMParser();\n                var link = parser.parseFromString(text, \"text/html\").querySelector(selector);\n                console.log(\"parse link\");\n                console.log(parser.parseFromString(text, \"text/html\"));\n                console.log(link);\n                link ? storeData(storedDomain, link.getAttribute('href')) : storeData(storedDomain, \"NO RESULTS\");\n              }).catch(function (result) {\n                console.log('Error');\n                console.log(result);\n                storeData(storedDomain, \"NO RESULTS\");\n              });\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n    return _findPageInCPanel.apply(this, arguments);\n  }\n\n  function checkTheme() {\n    return _checkTheme.apply(this, arguments);\n  }\n\n  function _checkTheme() {\n    _checkTheme = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4() {\n      var url, queries;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              url = \"\".concat(domain, \"/_cpanel/setup_wizard\");\n              queries = {\n                \"id\": \"webshopconfig\"\n              };\n              getPage(url, queries).then(function (result) {\n                console.log(\"chjecktheme ajax response\");\n                console.log(result);\n                var parser = new DOMParser();\n\n                var options = _toConsumableArray(parser.parseFromString(result, \"text/html\").querySelector(\"select[name='cfgval0']\").children);\n\n                var themes = [];\n                var livetheme = \"\";\n                options.forEach(function (option) {\n                  themes.push(option.value);\n                  option.selected ? livetheme = option.value : null;\n                });\n                siteData.livetheme = livetheme;\n                siteData.themes = themes;\n                storeData(domain, siteData);\n              }).catch(function (result) {\n                console.log(\"ERROR\");\n                console.log(result);\n                siteData.livetheme = \"N.A\";\n                siteData.themes = [\"N.A\"];\n                storeData(domain, siteData);\n              });\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n    return _checkTheme.apply(this, arguments);\n  }\n}\n/**\r\n * \r\n * @param {Message} message \t\t- \r\n * @param {function} send_response  - \r\n */\n\n\nfunction purgeCache(message, send_response) {\n  // request css config to chcek current value\n  var url = \"\".concat(message.loc.domain, \"/_cpanel/config/view\");\n  var queries = {\n    \"id\": \"NETO_CSS_VERSION\",\n    \"mod\": \"main\"\n  };\n  getPage(url, queries).then(function (text) {\n    return readCSSValue(text);\n  });\n\n  function readCSSValue(_x3) {\n    return _readCSSValue.apply(this, arguments);\n  }\n\n  function _readCSSValue() {\n    _readCSSValue = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5(response) {\n      var purge_cache_csrf_token, parser, doc, newCSSVersion, token, body;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              purge_cache_csrf_token = response.replace(/[\\s\\S]*csrfTokenSystemRefresh = '/, \"\").replace(/';[\\s\\S]*/, \"\");\n\n              if (message.heavy) {\n                parser = new DOMParser();\n                doc = parser.parse(response);\n                newCSSVersion = parseInt(doc.querySelector(\"[name='value']\").value) + 1;\n                token = doc.querySelector(\"[name='csrf_token']\").value;\n                body = {\n                  csrf_token: token,\n                  item: 'config',\n                  page: 'view',\n                  action: 'edit',\n                  mod: 'main',\n                  id: 'NETO_CSS_VERSION',\n                  value: newCSSVersion\n                };\n                postPage(url, body).then(function (text) {\n                  return triggerPurgeCache(purge_cache_csrf_token);\n                });\n              } else {\n                triggerPurgeCache(purge_cache_csrf_token);\n              }\n\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, this);\n    }));\n    return _readCSSValue.apply(this, arguments);\n  }\n\n  function triggerPurgeCache(_x4) {\n    return _triggerPurgeCache.apply(this, arguments);\n  }\n\n  function _triggerPurgeCache() {\n    _triggerPurgeCache = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee6(csrf_token) {\n      var body;\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              body = {\n                csrf_token: csrf_token,\n                ajaxfn: 'system_refresh',\n                ajax: 'y'\n              };\n              postPage(url, body).then(function (text) {\n                if (typeof browser == 'undefined') {\n                  chrome.tabs.reload(message.loc.id);\n                } else {\n                  browser.tabs.reload(message.loc.id);\n                }\n\n                send_response({\n                  'boop': 'adoop'\n                });\n              });\n\n            case 2:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, this);\n    }));\n    return _triggerPurgeCache.apply(this, arguments);\n  }\n}\n\n//# sourceURL=webpack:///./src/background/index.js?");

/***/ }),

/***/ "./src/utils/storage.js":
/*!******************************!*\
  !*** ./src/utils/storage.js ***!
  \******************************/
/*! exports provided: storeData, retrieveData, monitorStorage, sendMessage, sendMessageToID, listenForMessages, queryTabs, getTabLocation, changeLocation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"storeData\", function() { return storeData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"retrieveData\", function() { return retrieveData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"monitorStorage\", function() { return monitorStorage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sendMessage\", function() { return sendMessage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sendMessageToID\", function() { return sendMessageToID; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"listenForMessages\", function() { return listenForMessages; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"queryTabs\", function() { return queryTabs; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getTabLocation\", function() { return getTabLocation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"changeLocation\", function() { return changeLocation; });\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\r\n * Store some data to the browser's local storage\r\n * @param {string} key - Key in local storage to store data\r\n * @param {string} value - Value in local storage to store data\r\n * @param {function} success - Callback function to run if store is successful\r\n * @param {function} error  - Callback function to run if store is unsuccessful\r\n */\nvar storeData = function storeData(key, value, success, error) {\n  var item_set = {};\n  item_set[key] = value;\n\n  if (typeof browser == 'undefined') {\n    chrome.storage.local.set(item_set, success);\n  } else {\n    browser.storage.local.set(item_set).then(success, error);\n  }\n};\n/**\r\n * Retrieve data from the browser's local storage\r\n * @param {string[]} keys - array of keys to get data from\r\n * @param {function} success - Callback function to run if store is successful\r\n * @param {function} error - Callback function to run if store is unsuccessful\r\n */\n\nvar retrieveData = function retrieveData(keys, success, error) {\n  if (typeof browser == 'undefined') {\n    chrome.storage.local.get(keys, success);\n  } else {\n    browser.storage.local.get(keys).then(success, error);\n  }\n};\n/**\r\n * Monitor local storage for changes and call the callback function on a change\r\n * @param {function} callback - Function to callback on storage changes\r\n */\n\nvar monitorStorage = function monitorStorage(callback) {\n  if (typeof browser == 'undefined') {\n    var browser = chrome;\n  }\n\n  browser.storage.onChanged.addListener(callback);\n};\n/**\r\n * Send message to all tabs in the browser\r\n * @param {*} data - Data to send to all tabs\r\n * @param {function} proc_response - Callback function if successful\r\n */\n\nvar sendMessage = function sendMessage(data, proc_response) {\n  if (typeof browser == 'undefined') {\n    chrome.runtime.sendMessage(data, proc_response);\n  } else {\n    if (proc_response != null) {\n      browser.runtime.sendMessage(data).then(proc_response);\n    } else {\n      browser.runtime.sendMessage(data);\n    }\n  }\n};\n/**\r\n * \r\n * @param {integer} id - ID of tab in the browser\r\n * @param {*} data - Data to send to the specific tab\r\n * @param {function} proc_response - Function to call on success\r\n */\n\nvar sendMessageToID = function sendMessageToID(id, data, proc_response) {\n  if (typeof browser == 'undefined') {\n    chrome.tabs.sendMessage(id, data, proc_response);\n  } else {\n    if (proc_response != null) {\n      browser.tabs.sendMessage(id, data).then(proc_response);\n    } else {\n      browser.tabs.sendMessage(id, data);\n    }\n  }\n};\n/**\r\n * Listen for new messages to the current tab\r\n * @param {function} func - Function to call on a new message\r\n */\n\nvar listenForMessages = function listenForMessages(func) {\n  if (typeof browser == 'undefined') {\n    chrome.runtime.onMessage.addListener(func);\n  } else {\n    browser.runtime.onMessage.addListener(func);\n  }\n};\n/**\r\n * \r\n * @param {string} filter - String to filter tab titles by \r\n * @param {function} func - Function to call on successful \r\n */\n\nvar queryTabs = function queryTabs(filter, func) {\n  if (typeof browser == 'undefined') {\n    chrome.tabs.query(filter, func);\n  } else {\n    browser.tabs.query(filter).then(func);\n  }\n};\n/**\r\n * Get the URL for the current tab and pass it to the callback function\r\n * @param {function} callback - function to pass URL to\r\n */\n\nvar getTabLocation = function getTabLocation(callback) {\n  if (typeof browser == 'undefined') {\n    chrome.tabs.query({\n      currentWindow: true,\n      active: true\n    }, function (tabs) {\n      if (tabs.length > 0) {\n        callback(_objectSpread({}, tabs[0]));\n      }\n    });\n  } else {\n    browser.tabs.query({\n      currentWindow: true,\n      active: true\n    }).then(function (tabs) {\n      callback(_objectSpread({}, tabs[0]));\n    });\n  }\n};\n/**\r\n * Change the URL of the provided tab\r\n * @param {integer} tab_id - ID of tab to change the URL of \r\n * @param {string} url - Url to change the URL to\r\n */\n\nvar changeLocation = function changeLocation(tab_id, url) {\n  if (typeof browser == 'undefined') {\n    chrome.tabs.update(tab_id, {\n      url: url\n    });\n  } else {\n    browser.tabs.update(tab_id, {\n      url: url\n    });\n  }\n};\n\n//# sourceURL=webpack:///./src/utils/storage.js?");

/***/ })

/******/ });